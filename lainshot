#!/bin/bash

# ┌──────────┐
# │ lainshot │
# ├──────────┴──────────────────────────────────────────┐
# │ command-line ShareX wannabe                         │
# ├─────────┬───────────────────────────────────────────┤
# │ version │ 1.0.0                                     │
# ├─────────┼───────────────────────────────────────────┤
# │  author │ vexyyy@loves-la.in                        │
# ├─────────┼───────────────────────────────────────────┤
# │  source │ github.com/itsvexyyy/lainshot             │
# ├─────────┴───────────────────────────────────────────┤
# │ uses popular tools to take a screenshot and,        │
# │ optionally, upload it to lain.la using curl.        │
# │ this tool can also use love-la.in to shorten        │
# │ the uploaded image's URL.                           │
# │                                                     │
# │                         made with love by vexyyy <3 │
# └─────────────────────────────────────────────────────┘

usage () {
    echo "Usage: $0 [-acshrul] [-d DIR]"
    echo "command-line ShareX wannabe"
    echo "Output: FILENAME or URL"
    echo ""
    echo "Options:"
    echo "  -a, --active-window    : Capture the active window (default)"
    echo "  -c, --clipboard        : Copy output to clipboard (requires klipper)"
    echo "  -d, --dir [directory]  : Specify a directory to save the screenshot to"
    echo "                           (default: '-d ${XDG_PICTURES_DIR:-$HOME/Pictures}')"
    echo "  -s, --shortlink        : Generate a shortlink with love-la.in after uploading"
    echo "                           (must be used together with --upload[-only])"
    echo "  -S, --save-only        : Save the screenshot without uploading it and output"
    echo "                           the filename (default)"
    echo "  -h, --help             : Print this message"
    echo "  -r, --region           : Manually select a region to capture"
    echo "  -u, --upload           : Upload the screenshot to pomf.lain.la without"
    echo "                           deleting the local file"
    echo "  -U, --upload-only      : Upload the screenshot to pomf.lain.la and delete the"
    echo "                           local file"
    echo "Screenshot Utilities:"
    echo "  --scrot                : Uses scrot to take the screenshot"
    echo "  --shutter              : Uses shutter to take the screenshot"
    echo "  --spectacle            : Uses spectacle to take the screenshot"
}

errsay () {
    >&2 echo "[$0]: $@"
}

upload=0
clipboard=0
shorten=0
deleteWhenUploaded=0
mode=active
screenshotTool=

uppomf="https://pomf.lain.la/upload.php"
#downpomf="https://pomf2.lain.la/"

shortener="https://love-la.in/submit/?url="

timestamp=$(date +%s)

if [[ -z "$XDG_PICTURES_DIR" ]]; then
    if [[ ! -e ~/Pictures ]]; then
        mkdir ~/Pictures || ( errsay "Directory ~/Pictures does not exist and cannot be created!" && exit 1)
    fi
fi

screenshotDir="${XDG_PICTURES_DIR:-$HOME/Pictures}/Screenshots"

VALID_ARGS=$(getopt -o "acd:sShruU" --long "active,clipboard,dir:,shortlink,save-only,help,region,upload,upload-only,scrot,shutter,spectacle" -- "$@")
if [[ $? -ne 0 ]]; then
    usage && exit 1
fi

eval set -- "$VALID_ARGS"
while [ : ]; do
    case "$1" in
        -a | --active-window)
            mode=active
            shift
            ;;
        -c | --clipboard)
            clipboard=1
            shift
            ;;
        -d | --dir)
            if [[ ! -d "$2" ]]; then
                errsay "'$2' does not exist or is not a directory!" && exit 1
            else
                screenshotDir="$2"
            fi
            shift 2
            ;;
        -s | --shortlink)
            shorten=1
            shift
            ;;
        -S | --save-only)
            upload=0
            shift
            ;;
        -h | --help)
            usage && exit 0
            shift
            ;;
        -r | --region)
            mode=region
            shift
            ;;
        -u | --upload)
            upload=1
            shift
            ;;
        -U | --upload-only)
            upload=1
            deleteWhenUploaded=1
            shift
            ;;
        --scrot)
            screenshotTool=scrot
            shift
            ;;
        --shutter)
            screenshotTool=shutter
            shift
            ;;
        --spectacle)
            screenshotTool=spectacle
            shift
            ;;
        -- | -?)
            shift
            break
            ;;
    esac
done

if [[ ($upload -eq 0) && ($shorten -eq 1) ]]; then
    errsay "Option '--shortlink' cannot be used without '--upload' or '--upload-only'" && exit 1
fi

if [[ ! -e "$screenshotDir" ]]; then
    mkdir "$screenshotDir" || ( errsay "Can't create directory $screenshotDir" && exit 1 )
elif [[ ! -d $screenshotDir ]]; then
    errsay "$screenshotDir exists but is not a directory" && exit 1
fi

# take the screenshot
if [[ -z $screenshotTool ]]; then
    if command -v spectacle > /dev/null; then
        if [[ $mode == active ]]; then
            spectacle -ban -o "$screenshotDir/$timestamp.jpg"
        elif [[ $mode == region ]]; then
            spectacle -brn -o "$screenshotDir/$timestamp.jpg"
        fi
    elif command -v scrot > /dev/null; then
        if [[ $mode == active ]]; then
            scrot -u -F ~/"$screenshotDir/$timestamp.jpg"
        elif [[ $mode == region ]]; then
            scrot -fs -l mode=classic,style=dash,width=1,color="#2b59a7" -F "$screenshotDir/$timestamp.jpg"
        fi
    elif command -v shutter > /dev/null; then
        if [[ $mode == active ]]; then
            shutter -a -o "$screenshotDir/$timestamp.jpg"
        elif [[ $mode == region ]]; then
            shutter -s -o "$screenshotDir/$timestamp.jpg"
        fi
    else
        errsay "Couldn't find supported screenshot tool. Please ensure that one of the supported tools (spectacle, scrot, shutter) is available on the PATH and try again!" && exit 1
    fi
else
    case $screenshotTool in
        spectacle)
            if ! command -v spectacle > /dev/null; then
                errsay "Couldn't find spectacle on PATH" && exit 1;
            fi

            if [[ $mode == active ]]; then
                spectacle -ban -o "$screenshotDir/$timestamp.jpg"
            elif [[ $mode == region ]]; then
                spectacle -brn -o "$screenshotDir/$timestamp.jpg"
            fi
            ;;
        scrot)
            if ! command -v scrot > /dev/null; then
                errsay "Couldn't find scrot" && exit 1;
            fi

            if [[ $mode == active ]]; then
                scrot -u -F ~/"$screenshotDir/$timestamp.jpg"
            elif [[ $mode == region ]]; then
                scrot -fs -l mode=classic,style=dash,width=1,color="#2b59a7" -F "$screenshotDir/$timestamp.jpg"
            fi
            ;;
        shutter)
            if ! command -v shutter > /dev/null; then
                errsay "Couldn't find shutter on PATH" && exit 1;
            fi

            if [[ $mode == active ]]; then
                shutter -a -o "$screenshotDir/$timestamp.jpg"
            elif [[ $mode == region ]]; then
                shutter -s -o "$screenshotDir/$timestamp.jpg"
            fi
            ;;
    esac
fi

image="$screenshotDir/$timestamp.jpg"

# die if screenshot failed to save
if [[ ! -e "$image" ]]; then
    errsay "Screenshot capture failed!" && exit 1
fi

# upload and shorten url
if [[ $upload -eq 0 && $shorten -eq 0 ]]; then
    printf "$image" && exit 0
else
    imageUrl=$(curl -fsSL -F "files[]=@$image" "$uppomf" | jq -c -r '.files[].url')

    if [[ $deleteWhenUploaded -eq 1 ]]; then
        rm "$image"
    fi

    if [[ $shorten -eq 1 ]]; then
        shortlink=$(curl -fsSL "$shortener$imageUrl")
    fi

    printf "${shortlink:-$imageUrl}"

    if [[ $clipboard -eq 1 ]]; then
        if command -v qdbus > /dev/null; then
            if qdbus | grep -q org.kde.klipper; then
                qdbus org.kde.klipper /klipper setClipboardContents "${shortlink:-$imageUrl}"
            fi
        fi
    fi
fi
